<?php

class Site extends CI_Controller {

    public function __construct() {
        parent::__construct();
        if ($this->session->flashdata('visited')) {
            $this->session->keep_flashdata('visited');
        } else {
            $data = array(
                'ip' => $this->session->userdata('ip_address'),
                'userid' => $this->session->userdata('userID')
            );
            $this->db->insert('visit', $data);

            $this->session->set_flashdata('visited', TRUE);
        }
    }

    function index() {
        $this->load->model('list_model');
        $data['row'] = $this->list_model->getAll();
        $data['menu'] = 'startsida';
        //för att list_view ska kunna återanvändas för older
        $data['from']=FALSE;
        $data['comment'] = $this->list_model->getComments($data);
        $data['title'] = 'Gimme5: Startpage';

        $member = $this->session->userdata('is_logged_in');



        /*
         * Laddar views
         */
        //skickar titel
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');

        $this->load->view('menu/menu_view', $data);
        //skickar row
        $this->load->view('list_view', $data);
        if (!$member) {
            $this->load->view('login_view');
        } else {

            $this->load->model('profile_model');

            //hämtar vänner 
            $friends['friend'] = $this->profile_model->getFriends($this->session->userdata('userID'));

            //hämtar vänförfrågningar
            $friends['request'] = $this->profile_model->get_friend_requests($this->session->userdata('userID'));

            $this->load->view('inloggad_sidebar', $friends);
        }
        $this->load->view('includes/footer');
    }

    function older($page) {
        $data['from']=$page;
        $this->load->model('list_model');
        $data['row'] = $this->list_model->getOlder($page);
        $data['menu'] = 'startsida';
        //hämtar kommentarer
        $data['comment'] = $this->list_model->getComments($data);
        $data['title'] = 'Gimme5: Äldre listor sida '.$page;

        $member = $this->session->userdata('is_logged_in');
        /*
         * Laddar views
         */
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        $this->load->view('menu/menu_view', $data);
        $this->load->view('list_view', $data);

        if (!$member) {
            $this->load->view('login_view');
        } else {
            $this->load->model('profile_model');

            //hämtar vänner 
            $friends['friend'] = $this->profile_model->getFriends($this->session->userdata('userID'));

            //hämtar vänförfrågningar
            $friends['request'] = $this->profile_model->get_friend_requests($this->session->userdata('userID'));

            $this->load->view('inloggad_sidebar', $friends);
        }
        $this->load->view('includes/footer');
    }

    function user_agreement() {
        $this->load->view('user_agreement_view');
    }

    function delete_list() {
        $redirect_url = $_POST['url'];
        $this->load->model('delete_list_model');
        $this->delete_list_model->delete_list();
        redirect($redirect_url);
    }

    //Den inloggade användarens profil

    function profile() {
        $userid = $this->session->userdata('userID');
        $data['title'] = 'Gimme5: Profil';
        $data['menu'] = 'profile';
        $data['from']=FALSE;

        $this->load->library('upload');
        $this->load->model('list_model');

        $data['row'] = $this->list_model->getProfileLists($userid);
        $data['comment'] = $this->list_model->getComments($data);
        //hämtar profildata för den inloggade användaren från profileModel
        $this->load->model('profile_model');
        $data['profile'] = $this->profile_model->getProfile($userid);

        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        //ska vara något från profile_model
        //även passa in denna data till profile_view

        $this->load->view('menu/menu_view', $data);
        $this->load->view('profile_view', $data);
        $this->load->view('list_view', $data);
        $this->load->view('includes/footer');
    }

    //hämtar en annan användarens profil

    function user($userID) {
        // hämtar userID från adressfältet
        $data['menu'] = 'profile';
        $data['from']=FALSE;

        $this->load->library('upload');
        $this->load->model('login_model');
        $username = $this->login_model->username($userID);
        $data['title'] = 'Gimme5: ' . $username . 's profil';

        //hämtar profildata för den inloggade användaren från profileModel
        $this->load->model('profile_model');
        $data['profile'] = $this->profile_model->getProfile($userID);


         $member = $this->session->userdata('is_logged_in');

         if($member){
        //hämtar användarens vänner. Dett behövs för att veta om lägg till som vän eller ta bort vän skall visas i profile_view
        $data['friends'] = $this->profile_model->getFriends($this->session->userdata('userID'));
        }

        //hämtar kommentarer
        $this->load->model('list_model');
        $data['row'] = $this->list_model->getProfileLists($userID);
        $data['comment'] = $this->list_model->getComments($data);
        // var_dump($data['profile']);
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        //ska vara något från profile_model
        //även passa in denna data till profile_view

        $this->load->view('menu/menu_view', $data);
        $this->load->view('profile_view', $data);
        $this->load->view('list_view', $data);
        $this->load->view('includes/footer');
    }

    function friends() {
        $data['title'] = 'Gimme5: Vänner';
        $this->load->model('profile_model');
        $data['menu'] = 'friends';
        $data['row'] = $this->profile_model->getFriends($this->session->userdata('userID'));
        

        //hämtar vänförfrågningar
        $data['request'] = $this->profile_model->get_friend_requests($this->session->userdata('userID'));
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        $this->load->view('menu/menu_view', $data);
        $data['profile_data'] = $this->session->all_userdata();
        $this->load->view('friend_view', $data);
        $this->load->view('includes/footer');
        
    }

    function create_list() {
        $data['title'] = 'Gimme5: Create a List';
        $this->load->model('create_list_model');
        $data['menu'] = 'skapa';
        $data['category'] = $this->create_list_model->get_category_dropdown();
        //laddar views
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        $this->load->view('menu/menu_view', $data);
        $this->load->view('create_list_view', $data);
        $this->load->view('includes/footer');
    }

    function do_upload() {
        $config['upload_path'] = './uploads/user_pics';
        $config['allowed_types'] = 'gif|jpg|png';
        $config['max_size'] = '1000';
        $config['max_width'] = '1024';
        $config['max_height'] = '768';
        $config['encrypt_name'] = 'true';


        $this->load->library('upload', $config);

        if (!$this->upload->do_upload()) {
            $this->session->set_flashdata('upload_error', $this->upload->display_errors());
            //$error = array('error' => $this->upload->display_errors());
            redirect('site/profile');
            //$this->load->view('picture_upload_view', $error);
        } else {
            $data = array('upload_data' => $this->upload->data());
            $upload_data = $this->upload->data();

            $sql = "UPDATE  user SET  user_pic_path = ? WHERE  userID= ? ";

            $this->db->query($sql, array('uploads/user_pics/' . $upload_data['file_name'], $this->session->userdata('userID')));


            redirect('site/profile');
        }
    }

    function search() {
        //ger fucked upc åäö
        $search_string = $_POST['search_field'];
        $words=explode(html_escape($search_string));
        var_dump($words);
        //ladda och använd model
        $this->load->model('search_model');
        $data['row'] = $this->search_model->search($words);
        $data['title'] = 'Gimme5: Search';

        $member = $this->session->userdata('is_logged_in');

        /*
         * Laddar views
         */
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        $this->load->view('menu/menu_view');
        //skickar row
        if (!$data['row']) {
            $this->load->view('list_view', $data);
        } else {
            echo 'hej ' . $string;
        }
        /*
         * Om inloggad/inte inloggad
         */
        if (!$member) {
            $this->load->view('login_view');
        } else {
            $this->load->view('inloggad_sidebar');
        }
        $this->load->view('includes/footer');
    }

    function create_comment() {


        $this->load->model('list_model');
        $redirect_url = $_POST['url'];
        $comment['list_id'] = $_REQUEST['list_id'];
        $comment['comment'] = $_REQUEST['comment'];
        $this->list_model->create_comment($comment);



        redirect($redirect_url);
    }

    function friend_request($userID) {


        $this->load->model('profile_model');
        $insert = $this->profile_model->friend_request($userID);


        redirect('site/user/' . $userID);
    }

    function category() {
        $data['title'] = 'Gimme5: Categories';
        $data['menu'] = 'category';

        $this->load->model('category_model');
        $data['category'] = $this->category_model->get_categories();

        //laddar views
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        $this->load->view('menu/menu_view', $data);
        $this->load->view('category_view', $data);
        $this->load->view('includes/footer');
    }

    // function category($cat){
    // 	$data['title']='Gimme5: '.$cat;
    // 	$data['menu']='category';
    // 	$this->load->model('category_model');
    // 	$data['category'] = $this->category_model->get_categories();
    // 	//laddar views
    // 	$this->load->view('includes/header',$data);
    // 	$this->load->view('top_view');
    // 	$this->load->view('menu/menu_view', $data);	
    // 	$this->load->view('category_view', $data);
    // 	$this->load->view('includes/footer');
    // }


    function error_message() {
        $data['title'] = 'Gimme5: 404';
        $data['menu'] = 'friends';
        $this->load->view('includes/header', $data);
        $this->load->view('top_view');
        $this->load->view('menu/menu_view', $data);
        $data['profile_data'] = $this->session->all_userdata();
        $this->load->view('404_view', $data);
        $this->load->view('includes/footer');
        
    }


    // tar bort relationen mellan användaren som skickade vänförfrågning och den inloggade användaren.
    function deny_friend_request($user1){

        $logged_in_user = $this->session->userdata('userID');

        $this->load->model('profile_model');
        $this->profile_model->delete_relation($user1, $logged_in_user);
        redirect('site');
    }

    //anropar accept_friend i profile_model som ändrar is_confimed för relationen till 1 (true)

    function accept_friend_request($user1){

        $logged_in_user = $this->session->userdata('userID');

        $this->load->model('profile_model');
        $this->profile_model->accept_friend($user1, $logged_in_user);
        redirect('site');
    }



    // tar bort relationen mellan användaren och profilsidan som denne befinnner sig på 
    function remove_friend($userID){
    

        $logged_in_user = $this->session->userdata('userID');

        $this->load->model('profile_model');

        // tar bort felation där den angivna användaren är user1 
        $delete=$this->profile_model->delete_relation($userID, $logged_in_user);

         // tar bort felation där den angivna användaren är user2
        if(!$delete){
            $delete=$this->profile_model->delete_relation($logged_in_user, $userID);


        }
        redirect('site/user/' . $userID);
       


    }



}
